
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> parse_ridl <- function(sub_id, ridl_dir, matlab_dir = "/nas/longleaf/apps/matlab/2021b/bin") {
+   pacman::p_load(checkmate, data.table, dplyr, matlabr, tidyr, glue)
+   checkmate::assert_directory_exists(ridl_dir)
+   sub_dir <- file.path(ridl_dir, sub_id)
+   checkmate::assert_directory_exists(sub_dir)
+ 
+   # four files in each dir -- only need log at present
+   log_file <- file.path(sub_dir, "log_file.mat")
+   if (!checkmate::test_file_exists(log_file)) {
+     stop(glue("Cannot find log file: {log_file}"))
+   }
+ 
+   trial_data_fname <- tempfile(fileext = ".csv")
+   trial_info_fname <- tempfile(fileext = ".csv")
+   accrej_info_fname <- tempfile(fileext = ".csv")
+ 
+   if (!is.null(matlab_dir)) {
+     cat("Setting matlab.path\n")
+     checkmate::assert_directory_exists(matlab_dir)
+     options(matlab.path = matlab_dir)
+   }
+   run_matlab_code(
+     c(
+       glue("load '{log_file}';"),
+       "log.trial_information{:,'id'} = {log.subjectID};", # add subject id as a field
+       glue("writetable(log.data.trialdata, '{trial_data_fname}');"),
+       glue("writetable(log.trial_information, '{trial_info_fname}');"),
+       glue("writetable(struct2table(structfun(@transpose,log.accept_reject,'UniformOutput',false)), '{accrej_info_fname}');") # not using currently
+     ),
+     endlines = FALSE
+   )
+ 
+   trial_data <- data.table::fread(trial_data_fname) %>% select(-ends_with("_time")) # these are timestamps in ms code (not human readable)
+   trial_info <- data.table::fread(trial_info_fname)
+   trial_df <- trial_data %>%
+     merge(trial_info, by = c("block", "trial")) %>%
+     dplyr::select(-trial_duration) %>% # , -trial_started) %>% # not currently used
+     mutate(
+       trial = trial + 1, # switch to one-based indexing
+       # type = if_else(stim2 == -1000, "accrej", "newlearn")
+       trial_type = if_else(feedback == 0, "accrej", "new_learn") # human-readable trial code
+     ) %>%
+     dplyr::rename(iti = isi_length) %>% # ITI in seconds (starts trial in current scheme)
+     group_by(block) %>%
+     mutate(
+       run_number = cur_group_id(),
+       next_start = dplyr::lead(trial_started)
+     ) %>%
+     ungroup() %>%
+     dplyr::select(id, run_number, trial, block, everything())
+ 
+   # where this is going -- in progress for conversion to long events format
+   #    pivot_longer(cols = c(stim_time, choice_time, feedback_time), names_to = "event_type", values_to = "onset") %>%
+ 
+   return(trial_df)
+ }
> 
> ridl_dir <- "/proj/mnhallqlab/users/michael/ridl_fmri_analysis/data/momentum"
> trial_df <- parse_ridl(sub_id = "220256", ridl_dir = ridl_dir)
Setting matlab.path
Script created: /tmp/RtmpEr4Ty5/file79637cfae579.m
Command run is:
'/nas/longleaf/apps/matlab/2021b/bin'/matlab  -nodesktop -nosplash -nodisplay -r  "try, run('/tmp/RtmpEr4Ty5/file79637cfae579.m'); catch err, disp(err.message); exit(1); end; exit(0);"
[?1h=
                                                                                                      < M A T L A B (R) >
                                                                                            Copyright 1984-2021 The MathWorks, Inc.
                                                                                            R2021b (9.11.0.1769968) 64-bit (glnxa64)
                                                                                                       September 17, 2021

 
To get started, type doc.
For product information, visit www.mathworks.com.
 
[?1l>> 
> #txt <- data.table::fread("/proj/mnhallqlab/studies/momentum/clpipe/data_onsets/220256/Subject_220256.txt")
> 
> # blows up
> #x <- read.mat("/proj/mnhallqlab/studies/momentum/clpipe/data_onsets/220256/log_file.mat")
> 
> # checks
> calc_rt <- trial_df$choice_time - trial_df$stim_time
> rt_diff <- trial_df$reaction_time - calc_rt # looks reasonable
> summary(rt_diff)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
-0.012751 -0.005066 -0.001408  0.002260  0.008640  0.218946 
> calc_feedback <- trial_df$choice_time + trial_df$feedback_lag
> feedback_diff <- trial_df$feedback_time - calc_feedback
> 
> summary(feedback_diff)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
0.01983 0.04287 0.54817 0.77313 1.04579 2.89319 
> 
> # I would have guessed that if feedback_time is the onset of trial feedback, then the next start should be around 1.0s, with maybe a bit of an extension for 
> onset_diff <- trial_df$next_start - trial_df$feedback_time
> 
> summary(onset_diff)
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's 
 0.02088  0.05496  1.04001  1.45571  1.06728 17.48397        4 
> 
> # about 40% of trials do have a ~1.0s difference
> prop.table(table(abs(onset_diff - 1) < .1))

    FALSE      TRUE 
0.5903614 0.4096386 
> 
> # 40% of trials have ~ 0s difference
> prop.table(table(onset_diff < .1))

    FALSE      TRUE 
0.5843373 0.4156627 
> 
> # 17% have differences > 1.2s
> prop.table(table(onset_diff > 1.2))

    FALSE      TRUE 
0.8253012 0.1746988 
> 
> # there is some dependency in the offsets -- when onset_diff is 1.0, feedback_diff is often 0.0 and vice versa
> # this seems to depend in part on whether it is an accrej or new_learn trial.
> data.frame(feedback_diff, onset_diff, trial_df$trial_type) %>% head(n = 20)
   feedback_diff onset_diff trial_df.trial_type
1     2.26180496 0.07808495           new_learn
2     1.04805609 0.08702803           new_learn
3     1.03779683 0.04985809           new_learn
4     0.06262900 9.45981503              accrej
5     0.05705988 1.07886600              accrej
6     0.04290596 1.07166314              accrej
7     2.64084796 0.03957200           new_learn
8     1.05488487 0.05934095           new_learn
9     2.76306312 0.05227494           new_learn
10    2.89318900 2.57169199           new_learn
11    2.49237908 0.04584694           new_learn
12    1.04649509 0.05324888           new_learn
13    0.03490099 1.04633403              accrej
14    1.89375905 0.04450798           new_learn
15    0.04967594 8.19230103              accrej
16    0.04651406 1.06847787              accrej
17    1.02709802 0.04063082           new_learn
18    0.02984402 1.04068089              accrej
19    0.04259682 1.05922318              accrej
20    0.03067702 3.59915113              accrej
> 
> fwrite(trial_df, file="../output/example_trial_data.csv")
> 
> proc.time()
   user  system elapsed 
 13.989   4.049  15.234 
